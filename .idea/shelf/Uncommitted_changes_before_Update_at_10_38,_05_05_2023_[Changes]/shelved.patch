Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_08__27_04_2023__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_08__27_04_2023__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_08__27_04_2023__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_08__27_04_2023__Changes_.xml	(revision 398299a8787df8448c4caecb44aebee00085689f)
+++ /dev/null	(revision 398299a8787df8448c4caecb44aebee00085689f)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12_08,_27_04_2023_[Changes]" date="1682572124331" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_08,_27_04_2023_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12:08, 27/04/2023 [Changes]" />
-</changelist>
\ No newline at end of file
Index: uiserver/models/syncedstep.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\nconst {\n  Model\n} = require('sequelize');\nmodule.exports = (sequelize, DataTypes) => {\n  class SyncedStep extends Model {\n    /**\n     * Helper method for defining associations.\n     * This method is not a part of Sequelize lifecycle.\n     * The `models/index` file will call this method automatically.\n     */\n    static associate(models) {\n      // define association here\n    }\n  }\n  SyncedStep.init({\n    id: {\n      allowNull: false,\n      primaryKey: true,\n      type: DataTypes.INTEGER\n    },\n    user_id: DataTypes.INTEGER,\n    date: DataTypes.DATE,\n    value: DataTypes.INTEGER,\n    type: DataTypes.INTEGER,\n  }, {\n    sequelize,\n    modelName: 'SyncedStep',\n    tableName: 'syncedsteps'\n  });\n  return SyncedStep;\n};
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/uiserver/models/syncedstep.js b/uiserver/models/syncedstep.js
--- a/uiserver/models/syncedstep.js	(revision 398299a8787df8448c4caecb44aebee00085689f)
+++ b/uiserver/models/syncedstep.js	(date 1683255512911)
@@ -29,4 +29,4 @@
     tableName: 'syncedsteps'
   });
   return SyncedStep;
-};
\ No newline at end of file
+};
Index: FE/src/utils/axios.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import axios from \"axios\";\n\nconst instance = axios.create({\n  baseURL: \"http://10.0.2.2:5000\",\n});\n\ninstance.interceptors.request.use(\n  (config) => {\n    // const token = localStorage.getItem(\"token\");\n    // if (token) {\n    //   config.headers.Authorization = \"Bearer \" + token;\n    // }\n\n    config.headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    };\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  },\n);\n\ninstance.interceptors.response.use((response) => {\n  if (response.status === 204) {\n    return true;\n  }\n  return response.data;\n});\n\nexport default instance;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/FE/src/utils/axios.js b/FE/src/utils/axios.js
--- a/FE/src/utils/axios.js	(revision 398299a8787df8448c4caecb44aebee00085689f)
+++ b/FE/src/utils/axios.js	(date 1683255404401)
@@ -1,7 +1,8 @@
 import axios from "axios";
 
 const instance = axios.create({
-  baseURL: "http://10.0.2.2:5000",
+  baseURL: "http://192.168.1.3:5000",
+  // baseURL: "http://10.0.2.2:5000",
 });
 
 instance.interceptors.request.use(
@@ -19,7 +20,7 @@
   },
   (error) => {
     return Promise.reject(error);
-  },
+  }
 );
 
 instance.interceptors.response.use((response) => {
